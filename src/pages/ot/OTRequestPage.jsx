import { useState, useEffect } from "react";
import { supabase } from "../../supabase/supabaseClient";
import "./OTRequestPage.css";

export default function OTRequestPage() {
  const userName = localStorage.getItem("username");
  const userWage = parseFloat(localStorage.getItem("wage") || 0); // ‚úÖ ‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á/‡∏ß‡∏±‡∏ô
  const hourlyRate = userWage / 8; // ‚úÖ ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ 8 ‡∏ä‡∏°./‡∏ß‡∏±‡∏ô ‚Üí OT ‡∏Ñ‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á

  const [hours, setHours] = useState("");
  const [reason, setReason] = useState("");
  const [otHistory, setOtHistory] = useState([]);

  useEffect(() => {
    fetchOtHistory();
  }, []);
  
  async function fetchOtHistory() {
    const { data, error } = await supabase
      .from("overtime_requests")
      .select("*")
      .eq("requested_by", userName)
      .order("created_at", { ascending: false });

    if (!error && data) setOtHistory(data);
  }

  async function handleSubmit(e) {
    e.preventDefault();

    if (!hours || !reason) {
      alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•");
      return;
    }

    const otHours = parseFloat(hours);
    const otAmount = otHours * hourlyRate; // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô OT

    const today = new Date().toISOString().split("T")[0];

    const { error } = await supabase.from("overtime_requests").insert([
      {
        requested_by: userName,
        hours: otHours,
        reason,
        status: "pending",
        date: today,
        ot_amount: otAmount,  // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏á‡∏¥‡∏ô OT ‡∏£‡∏ß‡∏°
      },
    ]);

    if (error) alert("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + error.message);
    else {
      alert(`‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ OT ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! (${otHours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á = ${otAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó)`);
      setHours("");
      setReason("");
      fetchOtHistory();
    }
  }

  return (
    <div className="ot-root">
      <h2>‚è±Ô∏è ‡∏Ç‡∏≠‡∏ó‡∏≥ OT</h2>

      <p>üí∞ ‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô: {userWage.toLocaleString()} ‡∏ö‡∏≤‡∏ó | OT ‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á: {hourlyRate.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>

      <form className="ot-form" onSubmit={handleSubmit}>
        <label>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á OT</label>
        <input
          type="number"
          placeholder="‡πÄ‡∏ä‡πà‡∏ô 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"
          value={hours}
          onChange={(e) => setHours(e.target.value)}
        />

        <label>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠ OT</label>
        <textarea
          placeholder="‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥ OT..."
          value={reason}
          onChange={(e) => setReason(e.target.value)}
        />

        <button type="submit">‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ OT</button>
      </form>

      <div className="ot-history">
        <h3>üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏Ç‡∏≠ OT</h3>
        <ul className="ot-list">
          {otHistory.length === 0 ? (
            <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠ OT</p>
          ) : (
            otHistory.map((ot) => (
              <li key={ot.id}>
                üìÖ {new Date(ot.date).toLocaleDateString("th-TH")}  
                | ‚è≥ {ot.hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á  
                | üìù {ot.reason}  
                | üíµ {ot.ot_amount ? ot.ot_amount.toLocaleString() : "-"} ‡∏ö‡∏≤‡∏ó  
                | ‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:{" "}
                {ot.status === "approved" ? "‚úîÔ∏è ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß" : "‚è≥ ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"}
              </li>
            ))
          )}
        </ul>
      </div>
    </div>
  );
}
