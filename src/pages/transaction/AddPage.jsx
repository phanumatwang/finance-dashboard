import "./AddPage.css";
import { useState } from "react";
import { supabase } from "../../supabase/supabaseClient";

export default function AddPage() {
  const getToday = () => {
    const today = new Date();
    return today.toISOString().split("T")[0]; // üëâ ‡∏ï‡∏±‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ YYYY-MM-DD
  };
  const [file, setFile] = useState(null);
  const [fileName, setFileName] = useState("");
  const [date, setDate] = useState(getToday());
  const [category, setCategory] = useState("‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢");
  const [description, setDescription] = useState(""); // ‚úÖ ‡πÉ‡∏ä‡πâ description
  const [amount, setAmount] = useState("");
  const userName = localStorage.getItem("username"); // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà login ‡∏≠‡∏¢‡∏π‡πà
  const role = localStorage.getItem("role");
  function handleFileChange(e) {
    if (e.target.files.length > 0) {
      setFile(e.target.files[0]);
      setFileName(e.target.files[0].name);
    } else {
      setFile(null);
      setFileName("");
    }
  }

  async function handleSubmit(e) {
    e.preventDefault();

    let imageUrl = null;

    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå ‚Üí upload ‡πÑ‡∏õ Supabase Storage
    if (file) {
      const { data, error } = await supabase.storage
        .from("uploads") // ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Bucket ‡∏ä‡∏∑‡πà‡∏≠ uploads ‡πÉ‡∏ô Supabase
        .upload(`images/${Date.now()}-${file.name}`, file);

      if (error) {
        alert("‚ùå ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + error.message);
        return;
      }

      // ‚úÖ ‡∏î‡∏∂‡∏á public URL
      const { data: publicUrl } = supabase.storage
        .from("uploads")
        .getPublicUrl(data.path);

      imageUrl = publicUrl.publicUrl;
    }

    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Table `transactions`
    const { error: insertError } = await supabase.from("transactions").insert([
      {
        date,
        category,
        description,           // ‚úÖ ‡πÉ‡∏ä‡πâ description ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
        amount: parseFloat(amount),
        file_url: imageUrl,
        created_by: userName, // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        status: role === "user" ? "pending" : "approved"  
      },
    ]);

    if (insertError) {
      alert("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + insertError.message);
    } else {
      alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");

      // ‚úÖ Reset ‡∏ü‡∏≠‡∏£‡πå‡∏°
      setDate("");
      setCategory("‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢");
      setDescription("");  // ‚úÖ Reset ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
      setAmount("");
      setFile(null);
      setFileName("");
    }
  }

  return (
    <div className="add-root">
      <div className="add-header">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>

      <form className="add-form" onSubmit={handleSubmit}>
        <label>
          ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
          <input
            type="date"
            value={date}
            onChange={(e) => setDate(e.target.value)}
          />
        </label>

        <label>
          ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
          <select
            value={category}
            onChange={(e) => setCategory(e.target.value)}
          >
            <option>‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö</option>
            <option>‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢</option>
          </select>
        </label>

        <label>
          ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
          <input
            type="text"
            placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô / ‡∏Ñ‡πà‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£"
            value={description}                 // ‚úÖ ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
            onChange={(e) => setDescription(e.target.value)}
          />
        </label>

        <label>
          ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
          <input
            type="number"
            placeholder="0.00"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
          />
        </label>

        {/* ‚úÖ ‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå */}
        <label>
          ‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå/‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
          <input type="file" accept="image/*" onChange={handleFileChange} />
        </label>

        {fileName && <p className="file-preview">üìé ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå: {fileName}</p>}

        <button className="btn-save" type="submit">
          ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </form>
    </div>
  );
}
